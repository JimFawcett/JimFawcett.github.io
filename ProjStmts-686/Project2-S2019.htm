<!DOCTYPE html>
<html>
<head>
  <!--
   - Project2-S2019.htm - Project #2
   - ver 1.0 - 15 Dec 2018
   - Jim Fawcett, Syracuse University
  -->
  <title>Project #2</title>
  <meta http-equiv="content-type" content="text/html;charset=UTF-8" />
  <meta name="description" content="Software Engineering course notes. Code Samples. Software Links" />
  <meta name="keywords" content="Lecture, Notes, Code, Syracuse,University" />
  <meta name="Author" content="Jim Fawcett" />
  <meta name="Author" content="James Fawcett" />
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
  <script src="js/ScriptsTemplate.js"></script>
  <script src="js/ScriptsKeyboard.js"></script>
  <script src="js/ScriptsMenu.js"></script>
  <link rel="stylesheet" href="css/StylesTemplate.css" />
  <link rel="stylesheet" href="css/StylesMenu.css" />
</head>
<body onload="initializeMenu()" oncontextmenu="return false;">
  <nav>
    <div id="navbar"></div>
  </nav>
  <a id="Next" href="Project3-S2019.htm">N</a>
  <a id="Prev" href="Project1-S2019.htm">P</a>
  <a id="Cour" href="../../webpages/CSE686.htm">C</a>

  <navKeysContainer>
    <navKey onclick="loadCour()">C</navKey>
    <navKey onclick="scrollPageTop()">T</navKey>
    <navKey onclick="scrollPageBottom()">B</navKey>
    <navKey onclick="helpWin()">H</navKey>
    <navKey onclick="loadPrev()">P</navKey>
    <navKey onclick="loadNext()">N</navKey>
  </navKeysContainer>

  <header>
    <hgroup id="pagetitle">
      <h1 id="title" align="left">Project #2 - eBook Reader</h1>
      <h3 id="subtitle" align="left" style="margin-bottom:0px;">Version 1.1</h3>
    </hgroup>
    <a style="margin-left:45px;" href="../code/Project2HelpS2019">Project2HelpS2019</a>
  </header>

  <h2>Project Resources:</h2>
  <div>
    <indent-block>
      <a href="https://the-digital-reader.com/your-guide-to-7-open-ebook-formats/">eBook formats - the-digital-reader.com</a>
      <details>
        <summary>Libraries and techniques</summary>
        <indent-block>
          <a href="https://github.com/Asido/EpubSharp">C# library for reading and writing EPub files - github</a>,
          <a href="https://github.com/FolioReader/FolioReaderKit">FolioReaderKit - github</a>,
          <a href="https://www.codeproject.com/Tips/1273917/Opening-a-file-specifically-in-the-default-browser">Opening file in default browser</a>
        </indent-block>
      </details>
      <details>
        <summary>Information that may be less useful</summary>
        <indent-block>
          <a href="https://www.howtogeek.com/360419/what-is-a-mobi-file/">Mobi Files</a>,
          <a href="https://www.makeuseof.com/tag/ebook-formats-explained/">eBook formats - makeuseof.com</a>,
          <a href="https://stackoverflow.com/questions/7547939/possible-to-create-ebook-programmatically">StackOverflow comments on programmatic operations</a>
        </indent-block>
      </details>
      <details>
        <summary>Technicalities</summary>
        <indent-block>
          <a href="https://docs.microsoft.com/en-us/aspnet/core/fundamentals/http-context?view=aspnetcore-2.2">HttpContext</a>,
          <a href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.httprequest?view=aspnetcore-2.2">HttpRequest Class</a>,
          <a href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.aspnetcore.http.httpresponse?view=aspnetcore-2.2">HttpResponse Class</a><br />
          <a href="https://docs.microsoft.com/en-us/dotnet/csharp/tutorials/console-webapiclient">REST Client</a>,
          <a href="https://docs.microsoft.com/en-us/dotnet/api/system.net.http.httpclient?view=netframework-4.7.2">HttpClient Class</a><br />
          <a href="https://tahirnaushad.com/2017/08/28/uploaddownload-files-in-asp-net-core-2-0/">file upload and download</a>
        </indent-block>
      </details>
    </indent-block>
  </div>

  <h2>Content:</h2>
  For this Project you will build an eBook reader that supports at least PDF and Mobi documents.
  <h2>Requirements</h2>
  <ol>
    <li>
      Website with two sections: a public static section using HTML5, CSS3, and ES6,
      and a password protected section using Asp.Net Core MVC.
    </li>
    <li>
      Ability to select and view both publicly available documents, and, with authentication,
      private documents.
    </li>
    <li>
      Controls to change the viewing scale and to iterate through pages or sections of any of
      the documents.
    </li>
    <li>
      Ability to comment on documents for review.  Allowing markup may be a bonus requirement.
      Comments are viewable only by you and the authenticated user that supplied the input.
      Comments don&apos;t have to be part of the document, but must be associated with a
      document being reviewed.
    </li>
    <li>
      Webservice built using Asp.Net Web API, used to manage content on the site.
    </li>
    <li>
      Clients for WebService.  The client technology is up to you, but should use the
      .Net Core HttpClient class.
    </li>
    <li>
      Ability to upload, replace, and delete any of the stored documents.  Sources for the documents
      may be any file of a supported format from the local file system, dropbox, google drive, or onedrive.
    </li>
  </ol>
  <hr />
  <spacer-25></spacer-25>
  <info-bar></info-bar>
  <info-bar></info-bar>
</body>
</html>